name: Build, Test, and Release

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
                python-version: [3.12]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pyinstaller

            - name: Install GitHub CLI
              run: sudo apt-get install gh

            - name: Authenticate GitHub CLI
              run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

            - name: Run tests
              run: |
                  pip install -r requirements.txt
                  python -m unittest discover -s tests

            - name: Inject version and build executable
              run: |
                VERSION=$(python setup.py --version)
                sed -i "s/VERSION = \"0.0.0\"/VERSION = \"$VERSION\"/" src/ghw.py
                pyinstaller --onefile src/ghw.py --name ghw

            - name: Archive binary
              uses: actions/upload-artifact@v2
              with:
                  name: ghw-${{ matrix.os }}
                  path: dist/ghw

    create_release:
        runs-on: ubuntu-latest

        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Extract tag name
              id: extract_tag
              run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  tag_name: ${{ env.TAG_NAME }}
                  release_name: Release ${{ env.TAG_NAME }}
                  draft: false
                  prerelease: false

    release:
        needs: build

        runs-on: ubuntu-latest

        strategy:
            matrix:
                os: [ ubuntu-latest, macos-latest ]

        steps:
            - name: Download binary
              uses: actions/download-artifact@v2
              with:
                  name: ghw-${{ matrix.os }}
                  path: dist/

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/ghw
                  asset_name: ghw-${{ matrix.os }}
                  asset_content_type: application/octet-stream
